{"_id":"sensu/ci-tjenesteweb2.finntech.no","acknowledged":false,"address":"localhost","dc":"sensu","history":[{"acknowledged":false,"check":"BROADCAST_HEALTH_CHECK","client":"ci-tjenesteweb2.finntech.no","dc":"sensu","history":[0,0,0,0,0,1,2,2,2,0,0,0,0,0,0,0,0,0,0,0,0],"last_execution":1.465307206e+09,"last_result":{"command":"ruby -e 'require \"net/http\"; require \"json\"; proxy_host = \"localhost\"; proxy_port = 9120; use_lb_status = false; url = \"http://ci.broadcast.finn.no/broadcast/health\"; begin;   if use_lb_status and !File.exist?( \"/iad/finn/broadcast/htdocs/lb.html\" ) then;    puts \"OK: not in load balancer\";     exit 0;   end;   uri = URI.parse( url );   client = Net::HTTP::Proxy(proxy_host, proxy_port).new( uri.host, uri.port );   client.open_timeout = 5;   client.read_timeout = 5;   req = Net::HTTP::Get.new( uri.request_uri );   res = client.request( req );   puts res.code + \" \" + res.message;   puts res.body.encode(\"utf-8\", \"binary\", :invalid =\u003e :replace, :undef =\u003e :replace, :replace =\u003e \"\").delete( 134.chr+142.chr+143.chr+145.chr+146.chr);   if res.code == \"200\" then;     exit 0;   elsif res.code == \"210\" then;     exit 1;   end;   exit 1; rescue StandardError =\u003e e;   puts e.message;   exit 1;  end; '","duration":0.201,"executed":1.465307206e+09,"finn_app":"broadcast","finn_env":"ci","handlers":["default"],"interval":60,"issued":1.465307206e+09,"name":"BROADCAST_HEALTH_CHECK","occurrences":3,"output":"200 OK\n\u003c!DOCTYPE html\u003e\n\nno.finntech.broadcast:broadcast-admin-8.2-SNAPSHOT, build='ed734a53bdd53fe3b142b195d6d26c8c79db418e', timestamp='1462874662272', \u003ca href=\"${bambooBuildResultsUrl}\"\u003e${bambooBuildResultsUrl}\u003c/a\u003e\n","standalone":true,"status":0,"tags":["ci","url_check"],"teams":["Kommunikasjon_og_Deling"],"timeout":5},"last_status":0},{"acknowledged":false,"check":"vettingwebapp_iad_check","client":"ci-tjenesteweb2.finntech.no","dc":"sensu","history":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],"last_execution":1.465306959e+09,"last_result":{"command":"bash -c 'unset RUBYOPT; ruby /iad/local/bin/sensu_iad_check vettingwebapp'","duration":0.577,"executed":1.465306959e+09,"finn_app":"vettingwebapp","finn_env":"ci","handlers":["iad_check"],"interval":1200,"issued":1.465306959e+09,"name":"vettingwebapp_iad_check","output":"{\n  \"name\": \"vettingwebapp\",\n  \"status\": {\n    \"status\": \"running\",\n    \"licensee_name\": \"finn\",\n    \"licensee_level\": \"vettingwebapp\",\n    \"msg\": \"Tomcat is running with pid=15326, AJP-port=8990.\",\n    \"locked\": false,\n    \"return_code\": 0\n  },\n  \"artifact","standalone":true,"status":0,"tags":[],"teams":[],"type":"metric"},"last_status":0},{"acknowledged":false,"check":"FINN_TALENT_WEB_CHECK","client":"ci-tjenesteweb2.finntech.no","dc":"sensu","history":[0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,0],"last_execution":1.464267107e+09,"last_result":{"command":"ruby -e 'require \"net/http\"; require \"json\"; proxy_host = \"localhost\"; proxy_port = 8733; use_lb_status = false; url = \"http://ci.finn.no/talent/health/services\"; begin;   if use_lb_status and !File.exist?( \"/iad/finn/finn-talent-web/htdocs/lb.html\" ) then;    puts \"OK: not in load balancer\";     exit 0;   end;   uri = URI.parse( url );   client = Net::HTTP::Proxy(proxy_host, proxy_port).new( uri.host, uri.port );   client.open_timeout = 5;   client.read_timeout = 5;   req = Net::HTTP::Get.new( uri.request_uri );   res = client.request( req );   puts \"HTTP status: \"+ res.code + \" \" + res.message;   if [ \"200\" ].include? res.code then;     json_ob=JSON.parse(res.body);     if( json_ob.include?( \"health\" )  ) then;       status=json_ob[\"health\"];       puts status;       if \"GOOD\" == status then;         exit 0;       elsif [\"WEAK\", \"BAD\"].include? status then;         puts res.body.encode(\"utf-8\", \"binary\", :invalid =\u003e :replace, :undef =\u003e :replace, :replace =\u003e \"\").delete( 134.chr+142.chr+143.chr+145.chr+146.chr);         exit 0;       end;       puts \"ERROR: health neither GOOD, WEAK nor BAD\";       puts res.body.encode(\"utf-8\", \"binary\", :invalid =\u003e :replace, :undef =\u003e :replace, :replace =\u003e \"\").delete( 134.chr+142.chr+143.chr+145.chr+146.chr);       exit 1;     end;     puts \"ERROR: health not specified in JSON ouput\";     puts res.body.encode(\"utf-8\", \"binary\", :invalid =\u003e :replace, :undef =\u003e :replace, :replace =\u003e \"\").delete( 134.chr+142.chr+143.chr+145.chr+146.chr);     exit 1;   end;   exit 1; rescue StandardError =\u003e e;   puts e.message;   exit 1;  end; '","duration":1.06,"executed":1.464267107e+09,"finn_app":"finn-talent-web","finn_env":"ci","force_resolve":true,"handlers":["default"],"interval":60,"issued":1.464267107e+09,"name":"FINN_TALENT_WEB_CHECK","occurrences":"3","output":"Resolving on request of the API","standalone":true,"status":0,"tags":["ci","json_check"],"teams":["Rekruttering"],"timeout":5,"total_state_change":5},"last_status":0},{"acknowledged":false,"check":"recruitment-health-check","client":"ci-tjenesteweb2.finntech.no","dc":"sensu","history":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],"last_execution":1.465307198e+09,"last_result":{"command":"ruby -e 'require \"net/http\"; require \"json\"; proxy_host = \"localhost\"; proxy_port = 8194; use_lb_status = false; url = \"http://ci.finn.no/recruitment/health/services\"; begin;   if use_lb_status and !File.exist?( \"/iad/finn/recruitment/htdocs/lb.html\" ) then;    puts \"OK: not in load balancer\";     exit 0;   end;   uri = URI.parse( url );   client = Net::HTTP::Proxy(proxy_host, proxy_port).new( uri.host, uri.port );   client.open_timeout = 7;   client.read_timeout = 7;   req = Net::HTTP::Get.new( uri.request_uri );   res = client.request( req );   puts \"HTTP status: \"+ res.code + \" \" + res.message;   if [ \"200\" ].include? res.code then;     json_ob=JSON.parse(res.body);     if( json_ob.include?( \"health\" )  ) then;       status=json_ob[\"health\"];       puts status;       if \"GOOD\" == status then;         exit 0;       elsif [\"WEAK\", \"BAD\"].include? status then;         puts res.body.encode(\"utf-8\", \"binary\", :invalid =\u003e :replace, :undef =\u003e :replace, :replace =\u003e \"\").delete( 134.chr+142.chr+143.chr+145.chr+146.chr);         exit 0;       end;       puts \"ERROR: health neither GOOD, WEAK nor BAD\";       puts res.body.encode(\"utf-8\", \"binary\", :invalid =\u003e :replace, :undef =\u003e :replace, :replace =\u003e \"\").delete( 134.chr+142.chr+143.chr+145.chr+146.chr);       exit 1;     end;     puts \"ERROR: health not specified in JSON ouput\";     puts res.body.encode(\"utf-8\", \"binary\", :invalid =\u003e :replace, :undef =\u003e :replace, :replace =\u003e \"\").delete( 134.chr+142.chr+143.chr+145.chr+146.chr);     exit 1;   end;   exit 1; rescue StandardError =\u003e e;   puts e.message;   exit 1;  end; '","duration":1.003,"executed":1.465307198e+09,"finn_app":"recruitment","finn_env":"ci","handlers":["default"],"interval":60,"issued":1.465307198e+09,"name":"recruitment-health-check","occurrences":"3","output":"HTTP status: 200 OK\nGOOD\n","standalone":true,"status":0,"tags":["ci","json_check"],"teams":["Rekruttering"],"timeout":7},"last_status":0},{"acknowledged":false,"check":"SMAJOBBER_HEALTH","client":"ci-tjenesteweb2.finntech.no","dc":"sensu","history":[1,1,1,1,1,1,1,1,1,2,2,2,2,2,2,2,2,2,2,2,0],"last_execution":1.464267107e+09,"last_result":{"command":"ruby -e 'require \"net/http\"; require \"json\"; proxy_host = \"localhost\"; proxy_port = 8115; use_lb_status = false; url = \"http://ci.finn.no/smajobber/internal-backstage/health/services/\"; begin;   if use_lb_status and !File.exist?( \"/iad/finn/smajobber/htdocs/lb.html\" ) then;    puts \"OK: not in load balancer\";     exit 0;   end;   uri = URI.parse( url );   client = Net::HTTP::Proxy(proxy_host, proxy_port).new( uri.host, uri.port );   client.open_timeout = 4;   client.read_timeout = 4;   req = Net::HTTP::Get.new( uri.request_uri );   res = client.request( req );   puts \"HTTP status: \"+ res.code + \" \" + res.message;   if [ \"200\" ].include? res.code then;     json_ob=JSON.parse(res.body);     if( json_ob.include?( \"health\" )  ) then;       status=json_ob[\"health\"];       puts status;       if \"GOOD\" == status then;         exit 0;       elsif [\"WEAK\", \"BAD\"].include? status then;         puts res.body.encode(\"utf-8\", \"binary\", :invalid =\u003e :replace, :undef =\u003e :replace, :replace =\u003e \"\").delete( 134.chr+142.chr+143.chr+145.chr+146.chr);         exit 0;       end;       puts \"ERROR: health neither GOOD, WEAK nor BAD\";       puts res.body.encode(\"utf-8\", \"binary\", :invalid =\u003e :replace, :undef =\u003e :replace, :replace =\u003e \"\").delete( 134.chr+142.chr+143.chr+145.chr+146.chr);       exit 1;     end;     puts \"ERROR: health not specified in JSON ouput\";     puts res.body.encode(\"utf-8\", \"binary\", :invalid =\u003e :replace, :undef =\u003e :replace, :replace =\u003e \"\").delete( 134.chr+142.chr+143.chr+145.chr+146.chr);     exit 1;   end;   exit 1; rescue StandardError =\u003e e;   puts e.message;   exit 1;  end; '","duration":4.11,"executed":1.464267107e+09,"finn_app":"smajobber","finn_env":"ci","force_resolve":true,"handlers":["default"],"interval":60,"issued":1.464267107e+09,"name":"SMAJOBBER_HEALTH","occurrences":2,"output":"Resolving on request of the API","standalone":true,"status":0,"tags":["ci","json_check"],"teams":["Smaajobber"],"timeout":4,"total_state_change":5},"last_status":0},{"acknowledged":false,"check":"partner-web-server-health-check","client":"ci-tjenesteweb2.finntech.no","dc":"sensu","history":[0,0,0,0,0,0,0,2,2,2,0,0,0,0,0,0,0,0,0,0,0],"last_execution":1.465307177e+09,"last_result":{"command":"ruby -e 'require \"net/http\"; require \"json\"; proxy_host = \"localhost\"; proxy_port = 8419; use_lb_status = false; url = \"http://ci.finn.no/partner-web/\"; begin;   if use_lb_status and !File.exist?( \"/iad/finn/partner-web/htdocs/lb.html\" ) then;    puts \"OK: not in load balancer\";     exit 0;   end;   uri = URI.parse( url );   client = Net::HTTP::Proxy(proxy_host, proxy_port).new( uri.host, uri.port );   client.open_timeout = 1;   client.read_timeout = 1;   req = Net::HTTP::Get.new( uri.request_uri );   res = client.request( req );   puts res.code + \" \" + res.message;   puts res.body.encode(\"utf-8\", \"binary\", :invalid =\u003e :replace, :undef =\u003e :replace, :replace =\u003e \"\").delete( 134.chr+142.chr+143.chr+145.chr+146.chr);   if res.code == \"200\" then;     exit 0;   elsif res.code == \"210\" then;     exit 1;   end;   exit 1; rescue StandardError =\u003e e;   puts e.message;   exit 1;  end; '","duration":0.206,"executed":1.465307177e+09,"finn_app":"partner-web","finn_env":"ci","handlers":["default"],"interval":60,"issued":1.465307177e+09,"name":"partner-web-server-health-check","occurrences":"3","output":"200 OK\n\u003c!DOCTYPE html\u003e\n\u003chtml lang=\"no\"\u003e\n    \u003cmeta http-equiv=\"X-UA-Compatible\" content=\"IE=edge,chrome=1\"\u003e\n    \u003cmeta http-equiv=\"Content-Type\" content=\"text/html;charset=UTF-8\"\u003e\n    \u003cmeta name=\"viewport\" content=\"width=device-width, initial-scale=1\"\u003e\n    \u003ch","standalone":true,"status":0,"tags":["ci","url_check"],"teams":["Kundeadmin"],"timeout":1},"last_status":0},{"acknowledged":false,"check":"employer-web_iad_check","client":"ci-tjenesteweb2.finntech.no","dc":"sensu","history":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],"last_execution":1.461580654e+09,"last_result":{"command":"bash -c 'unset RUBYOPT; ruby /iad/local/bin/sensu_iad_check employer-web'","duration":1.784,"executed":1.461580654e+09,"finn_app":"employer-web","finn_env":"ci","handlers":["iad_check"],"interval":1200,"issued":1.461580654e+09,"name":"employer-web_iad_check","output":"{\n  \"name\": \"employer-web\",\n  \"status\": {\n    \"status\": \"unavailable\",\n    \"licensee_name\": \"finn\",\n    \"licensee_level\": \"employer-web\",\n    \"msg\": \" /iad/finn/employer-web does not exist!\",\n    \"locked\": false,\n    \"return_code\": 1\n  },\n  \"artifact\": \"abs","standalone":true,"status":0,"tags":[],"teams":[],"type":"metric"},"last_status":0},{"acknowledged":false,"check":"disk_space","client":"ci-tjenesteweb2.finntech.no","dc":"sensu","history":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],"last_execution":1.465306981e+09,"last_result":{"command":"bash -c 'dd if=/dev/zero of=/tmp/sensu_test_disk_space bs=10240 count=4096 2\u003e\u00261 \u0026\u0026 rm -f /tmp/sensu_test_disk_space || exit 1'","duration":0.101,"executed":1.465306981e+09,"finn_app":"system","finn_env":"ci","handlers":["default"],"human_action":"Failure means I was unable to write to disk.  Please log in and check.","interval":300,"issued":1.465306981e+09,"name":"disk_space","occurrences":3,"output":"4096+0 records in\n4096+0 records out\n41943040 bytes (42 MB) copied, 0.047776 s, 878 MB/s\n","standalone":true,"status":0,"tags":["system_service","sensu","disk"],"teams":["Infrastruktur","vakt"],"timeout":5},"last_status":0},{"acknowledged":false,"check":"finn-talent-web_iad_check","client":"ci-tjenesteweb2.finntech.no","dc":"sensu","history":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],"last_execution":1.461580654e+09,"last_result":{"command":"bash -c 'unset RUBYOPT; ruby /iad/local/bin/sensu_iad_check finn-talent-web'","duration":7.724,"executed":1.461580654e+09,"finn_app":"finn-talent-web","finn_env":"ci","handlers":["iad_check"],"interval":1200,"issued":1.461580654e+09,"name":"finn-talent-web_iad_check","output":"{\n  \"name\": \"finn-talent-web\",\n  \"status\": {\n    \"status\": \"stopped\",\n    \"licensee_name\": \"finn\",\n    \"licensee_level\": \"finn-talent-web\",\n    \"msg\": \"Tomcat not running.\",\n    \"locked\": false,\n    \"return_code\": 1\n  },\n  \"artifact\": \"/iad/finn/finn-talent","standalone":true,"status":0,"tags":[],"teams":[],"type":"metric"},"last_status":0},{"acknowledged":false,"check":"api-admin_iad_check","client":"ci-tjenesteweb2.finntech.no","dc":"sensu","history":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],"last_execution":1.463747818e+09,"last_result":{"command":"bash -c 'unset RUBYOPT; ruby /iad/local/bin/sensu_iad_check api-admin'","duration":1.083,"executed":1.463747818e+09,"finn_app":"api-admin","finn_env":"ci","handlers":["iad_check"],"interval":1200,"issued":1.463747818e+09,"name":"api-admin_iad_check","output":"{\n  \"name\": \"api-admin\",\n  \"status\": {\n    \"status\": \"running\",\n    \"licensee_name\": \"finn\",\n    \"licensee_level\": \"api-admin\",\n    \"msg\": \"Tomcat is running with pid=7265, AJP-port=8407.\",\n    \"locked\": false,\n    \"return_code\": 0\n  },\n  \"artifact\": \"/iad/","standalone":true,"status":0,"tags":[],"teams":[],"type":"metric"},"last_status":0},{"acknowledged":false,"check":"self-service_iad_check","client":"ci-tjenesteweb2.finntech.no","dc":"sensu","history":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],"last_execution":1.465306961e+09,"last_result":{"command":"bash -c 'unset RUBYOPT; ruby /iad/local/bin/sensu_iad_check self-service'","duration":0.457,"executed":1.465306961e+09,"finn_app":"self-service","finn_env":"ci","handlers":["iad_check"],"interval":1200,"issued":1.465306961e+09,"name":"self-service_iad_check","output":"{\n  \"name\": \"self-service\",\n  \"status\": {\n    \"status\": \"running\",\n    \"licensee_name\": \"finn\",\n    \"licensee_level\": \"self-service\",\n    \"msg\": \"Tomcat is running with pid=14707, AJP-port=8056.\",\n    \"locked\": false,\n    \"return_code\": 0\n  },\n  \"artifact\":","standalone":true,"status":0,"tags":[],"teams":[],"type":"metric"},"last_status":0},{"acknowledged":false,"check":"self-service-server-health-check","client":"ci-tjenesteweb2.finntech.no","dc":"sensu","history":[0,0,0,0,0,1,2,2,2,2,0,0,0,0,0,0,0,0,0,0,0],"last_execution":1.46530721e+09,"last_result":{"command":"ruby -e 'require \"net/http\"; require \"json\"; proxy_host = \"localhost\"; proxy_port = 8057; use_lb_status = false; url = \"http://ci.finn.no/minfinn/health\"; begin;   if use_lb_status and !File.exist?( \"/iad/finn/self-service/htdocs/lb.html\" ) then;    puts \"OK: not in load balancer\";     exit 0;   end;   uri = URI.parse( url );   client = Net::HTTP::Proxy(proxy_host, proxy_port).new( uri.host, uri.port );   client.open_timeout = 1;   client.read_timeout = 1;   req = Net::HTTP::Get.new( uri.request_uri );   res = client.request( req );   puts res.code + \" \" + res.message;   puts res.body.encode(\"utf-8\", \"binary\", :invalid =\u003e :replace, :undef =\u003e :replace, :replace =\u003e \"\").delete( 134.chr+142.chr+143.chr+145.chr+146.chr);   if res.code == \"200\" then;     exit 0;   elsif res.code == \"210\" then;     exit 1;   end;   exit 1; rescue StandardError =\u003e e;   puts e.message;   exit 1;  end; '","duration":0.202,"executed":1.46530721e+09,"finn_app":"self-service","finn_env":"ci","handlers":["default"],"interval":60,"issued":1.46530721e+09,"name":"self-service-server-health-check","occurrences":"3","output":"200 OK\n[{\"rel\":\"build\",\"href\":\"/minfinn/health/build\",\"type\":\"application/json\"},{\"rel\":\"services\",\"href\":\"/minfinn/health/services\",\"type\":\"application/json\"},{\"rel\":\"documentation\",\"href\":\"/minfinn/health/documentation\",\"type\":\"application/json\"}]\n","standalone":true,"status":0,"tags":["ci","url_check"],"teams":["Kundeadmin"],"timeout":1},"last_status":0},{"acknowledged":false,"check":"login-webapp-server-health-check","client":"ci-tjenesteweb2.finntech.no","dc":"sensu","history":[0,0,0,0,0,0,0,2,2,2,2,0,0,0,0,0,0,0,0,0,0],"last_execution":1.465307177e+09,"last_result":{"command":"ruby -e 'require \"net/http\"; require \"json\"; proxy_host = \"localhost\"; proxy_port = 8088; use_lb_status = false; url = \"http://ci.finn.no/auth/health\"; begin;   if use_lb_status and !File.exist?( \"/iad/finn/login-webapp/htdocs/lb.html\" ) then;    puts \"OK: not in load balancer\";     exit 0;   end;   uri = URI.parse( url );   client = Net::HTTP::Proxy(proxy_host, proxy_port).new( uri.host, uri.port );   client.open_timeout = 1;   client.read_timeout = 1;   req = Net::HTTP::Get.new( uri.request_uri );   res = client.request( req );   puts res.code + \" \" + res.message;   puts res.body.encode(\"utf-8\", \"binary\", :invalid =\u003e :replace, :undef =\u003e :replace, :replace =\u003e \"\").delete( 134.chr+142.chr+143.chr+145.chr+146.chr);   if res.code == \"200\" then;     exit 0;   elsif res.code == \"210\" then;     exit 1;   end;   exit 1; rescue StandardError =\u003e e;   puts e.message;   exit 1;  end; '","duration":0.207,"executed":1.465307177e+09,"finn_app":"login-webapp","finn_env":"ci","handlers":["default"],"interval":60,"issued":1.465307177e+09,"name":"login-webapp-server-health-check","occurrences":"3","output":"200 OK\n[{\"rel\":\"build\",\"href\":\"/auth/health/build\",\"type\":\"application/json\"},{\"rel\":\"services\",\"href\":\"/auth/health/services\",\"type\":\"application/json\"},{\"rel\":\"documentation\",\"href\":\"/auth/health/documentation\",\"type\":\"application/json\"}]\n","standalone":true,"status":0,"tags":["ci","url_check"],"teams":["Kundeadmin"],"timeout":1},"last_status":0},{"acknowledged":false,"check":"recruitment-health-check_WEAK","client":"ci-tjenesteweb2.finntech.no","dc":"sensu","history":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],"last_execution":1.465307204e+09,"last_result":{"command":"ruby -e 'require \"net/http\"; require \"json\"; proxy_host = \"localhost\"; proxy_port = 8194; use_lb_status = false; url = \"http://ci.finn.no/recruitment/health/services\"; begin;   if use_lb_status and !File.exist?( \"/iad/finn/recruitment/htdocs/lb.html\" ) then;    puts \"OK: not in load balancer\";     exit 0;   end;   uri = URI.parse( url );   client = Net::HTTP::Proxy(proxy_host, proxy_port).new( uri.host, uri.port );   client.open_timeout = 7;   client.read_timeout = 7;   req = Net::HTTP::Get.new( uri.request_uri );   res = client.request( req );   puts \"HTTP status: \"+ res.code + \" \" + res.message;   if [ \"200\" ].include? res.code then;     json_ob=JSON.parse(res.body);     if( json_ob.include?( \"health\" )  ) then;       status=json_ob[\"health\"];       puts status;       if \"GOOD\" == status then;         exit 0;       elsif [\"WEAK\", \"BAD\"].include? status then;         puts res.body.encode(\"utf-8\", \"binary\", :invalid =\u003e :replace, :undef =\u003e :replace, :replace =\u003e \"\").delete( 134.chr+142.chr+143.chr+145.chr+146.chr);         exit 1;       end;       puts \"ERROR: health neither GOOD, WEAK nor BAD\";       puts res.body.encode(\"utf-8\", \"binary\", :invalid =\u003e :replace, :undef =\u003e :replace, :replace =\u003e \"\").delete( 134.chr+142.chr+143.chr+145.chr+146.chr);       exit 1;     end;     puts \"ERROR: health not specified in JSON ouput\";     puts res.body.encode(\"utf-8\", \"binary\", :invalid =\u003e :replace, :undef =\u003e :replace, :replace =\u003e \"\").delete( 134.chr+142.chr+143.chr+145.chr+146.chr);     exit 1;   end;   exit 1; rescue StandardError =\u003e e;   puts e.message;   exit 1;  end; '","duration":0.803,"executed":1.465307204e+09,"finn_app":"recruitment","finn_env":"ci","handlers":["default"],"interval":60,"issued":1.465307204e+09,"name":"recruitment-health-check_WEAK","occurrences":"3","output":"HTTP status: 200 OK\nGOOD\n","standalone":true,"status":0,"tags":["ci","weak_json_check"],"teams":["Rekruttering"],"timeout":7},"last_status":0},{"acknowledged":false,"check":"employer_web_health","client":"ci-tjenesteweb2.finntech.no","dc":"sensu","history":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0],"last_execution":1.464267107e+09,"last_result":{"command":"ruby -e 'require \"net/http\"; require \"json\"; proxy_host = \"localhost\"; proxy_port = 8150; use_lb_status = false; url = \"http://ci.finn.no/job/employer/health/\"; begin;   if use_lb_status and !File.exist?( \"/iad/finn/employer-web/htdocs/lb.html\" ) then;    puts \"OK: not in load balancer\";     exit 0;   end;   uri = URI.parse( url );   client = Net::HTTP::Proxy(proxy_host, proxy_port).new( uri.host, uri.port );   client.open_timeout = 7;   client.read_timeout = 7;   req = Net::HTTP::Get.new( uri.request_uri );   res = client.request( req );   puts res.code + \" \" + res.message;   puts res.body.encode(\"utf-8\", \"binary\", :invalid =\u003e :replace, :undef =\u003e :replace, :replace =\u003e \"\").delete( 134.chr+142.chr+143.chr+145.chr+146.chr);   if res.code == \"200\" then;     exit 0;   elsif res.code == \"210\" then;     exit 1;   end;   exit 1; rescue StandardError =\u003e e;   puts e.message;   exit 1;  end; '","duration":1.034,"executed":1.464267107e+09,"finn_app":"employer-web","finn_env":"ci","force_resolve":true,"handlers":["default"],"interval":60,"issued":1.464267107e+09,"name":"employer_web_health","occurrences":"3","output":"Resolving on request of the API","standalone":true,"status":0,"tags":["ci","url_check"],"teams":["Rekruttering"],"timeout":7,"total_state_change":0},"last_status":0},{"acknowledged":false,"check":"logstash-shipper_system_service_check","client":"ci-tjenesteweb2.finntech.no","dc":"sensu","history":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],"last_execution":1.465307196e+09,"last_result":{"command":"/iad/local/etc/init.d/logstash-shipper status","duration":0.003,"executed":1.465307196e+09,"finn_app":"logstash-shipper","finn_env":"ci","handlers":["default"],"interval":60,"issued":1.465307196e+09,"name":"logstash-shipper_system_service_check","occurrences":7,"output":"logstash-shipper is running.\n","standalone":true,"status":0,"tags":["system_service"],"teams":["Infrastruktur"]},"last_status":0},{"acknowledged":false,"check":"cms-web_iad_check","client":"ci-tjenesteweb2.finntech.no","dc":"sensu","history":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],"last_execution":1.463747842e+09,"last_result":{"command":"bash -c 'unset RUBYOPT; ruby /iad/local/bin/sensu_iad_check cms-web'","duration":0.685,"executed":1.463747842e+09,"finn_app":"cms-web","finn_env":"ci","handlers":["iad_check"],"interval":1200,"issued":1.463747842e+09,"name":"cms-web_iad_check","output":"{\n  \"name\": \"cms-web\",\n  \"status\": {\n    \"status\": \"stopped\",\n    \"licensee_name\": \"finn\",\n    \"licensee_level\": \"cms-web\",\n    \"msg\": \"Tomcat not running.\",\n    \"locked\": false,\n    \"return_code\": 1\n  },\n  \"artifact\": \"/iad/finn/cms-web/wars/cms-web-1.0-20","standalone":true,"status":0,"tags":[],"teams":[],"type":"metric"},"last_status":0},{"acknowledged":false,"check":"consul_check","client":"ci-tjenesteweb2.finntech.no","dc":"sensu","history":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],"last_execution":1.465306969e+09,"last_result":{"command":"/iad/local/bin/consul_check.sh","duration":0.024,"executed":1.465306969e+09,"finn_app":"consul","finn_env":"ci","handlers":["default"],"interval":300,"issued":1.465306969e+09,"name":"consul_check","occurrences":2,"output":"OK: 76 members\n","standalone":true,"status":0,"tags":["system_service"],"teams":["Infrastruktur","vakt"]},"last_status":0},{"acknowledged":false,"check":"SMAJOBBER_HEALTH_WEAK","client":"ci-tjenesteweb2.finntech.no","dc":"sensu","history":[0,0,0,0,0,0,0,1,1,2,2,0,0,0,0,0,0,2,2,2,0],"last_execution":1.465307177e+09,"last_result":{"command":"ruby -e 'require \"net/http\"; require \"json\"; proxy_host = \"localhost\"; proxy_port = 8115; use_lb_status = false; url = \"http://ci.finn.no/smajobber/internal-backstage/health/services/\"; begin;   if use_lb_status and !File.exist?( \"/iad/finn/smajobber/htdocs/lb.html\" ) then;    puts \"OK: not in load balancer\";     exit 0;   end;   uri = URI.parse( url );   client = Net::HTTP::Proxy(proxy_host, proxy_port).new( uri.host, uri.port );   client.open_timeout = 10;   client.read_timeout = 10;   req = Net::HTTP::Get.new( uri.request_uri );   res = client.request( req );   puts \"HTTP status: \"+ res.code + \" \" + res.message;   if [ \"200\" ].include? res.code then;     json_ob=JSON.parse(res.body);     if( json_ob.include?( \"health\" )  ) then;       status=json_ob[\"health\"];       puts status;       if \"GOOD\" == status then;         exit 0;       elsif [\"WEAK\", \"BAD\"].include? status then;         puts res.body.encode(\"utf-8\", \"binary\", :invalid =\u003e :replace, :undef =\u003e :replace, :replace =\u003e \"\").delete( 134.chr+142.chr+143.chr+145.chr+146.chr);         exit 1;       end;       puts \"ERROR: health neither GOOD, WEAK nor BAD\";       puts res.body.encode(\"utf-8\", \"binary\", :invalid =\u003e :replace, :undef =\u003e :replace, :replace =\u003e \"\").delete( 134.chr+142.chr+143.chr+145.chr+146.chr);       exit 1;     end;     puts \"ERROR: health not specified in JSON ouput\";     puts res.body.encode(\"utf-8\", \"binary\", :invalid =\u003e :replace, :undef =\u003e :replace, :replace =\u003e \"\").delete( 134.chr+142.chr+143.chr+145.chr+146.chr);     exit 1;   end;   exit 1; rescue StandardError =\u003e e;   puts e.message;   exit 1;  end; '","duration":1.212,"executed":1.465307177e+09,"finn_app":"smajobber","finn_env":"ci","handlers":["default"],"interval":60,"issued":1.465307177e+09,"name":"SMAJOBBER_HEALTH_WEAK","occurrences":2,"output":"HTTP status: 200 OK\nGOOD\n","standalone":true,"status":0,"tags":["ci","weak_json_check"],"teams":["Smaajobber"],"timeout":10},"last_status":0},{"acknowledged":false,"check":"finnbox-web_iad_check","client":"ci-tjenesteweb2.finntech.no","dc":"sensu","history":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],"last_execution":1.465306961e+09,"last_result":{"command":"bash -c 'unset RUBYOPT; ruby /iad/local/bin/sensu_iad_check finnbox-web'","duration":0.465,"executed":1.465306961e+09,"finn_app":"finnbox-web","finn_env":"ci","handlers":["iad_check"],"interval":1200,"issued":1.465306961e+09,"name":"finnbox-web_iad_check","output":"{\n  \"name\": \"finnbox-web\",\n  \"status\": {\n    \"status\": \"running\",\n    \"licensee_name\": \"finn\",\n    \"licensee_level\": \"finnbox-web\",\n    \"msg\": \"Tomcat is running with pid=14798, AJP-port=9055.\",\n    \"locked\": false,\n    \"return_code\": 0\n  },\n  \"artifact\": \"","standalone":true,"status":0,"tags":[],"teams":[],"type":"metric"},"last_status":0},{"acknowledged":false,"check":"SCAMCONTROL_HEALTH_CHECK","client":"ci-tjenesteweb2.finntech.no","dc":"sensu","history":[0,0,0,0,0,0,2,2,2,2,2,0,0,0,0,0,0,0,0,0,0],"last_execution":1.4653072e+09,"last_result":{"command":"ruby -e 'require \"net/http\"; require \"json\"; proxy_host = \"localhost\"; proxy_port = 8031; use_lb_status = false; url = \"http://ci.scamcontrol.finn.no/health/services\"; begin;   if use_lb_status and !File.exist?( \"/iad/finn/scamcontrolwebapp/htdocs/lb.html\" ) then;    puts \"OK: not in load balancer\";     exit 0;   end;   uri = URI.parse( url );   client = Net::HTTP::Proxy(proxy_host, proxy_port).new( uri.host, uri.port );   client.open_timeout = 1;   client.read_timeout = 1;   req = Net::HTTP::Get.new( uri.request_uri );   res = client.request( req );   puts \"HTTP status: \"+ res.code + \" \" + res.message;   if [ \"200\" ].include? res.code then;     json_ob=JSON.parse(res.body);     if( json_ob.include?( \"health\" )  ) then;       status=json_ob[\"health\"];       puts status;       if \"GOOD\" == status then;         exit 0;       elsif [\"WEAK\", \"BAD\"].include? status then;         puts res.body.encode(\"utf-8\", \"binary\", :invalid =\u003e :replace, :undef =\u003e :replace, :replace =\u003e \"\").delete( 134.chr+142.chr+143.chr+145.chr+146.chr);         exit 0;       end;       puts \"ERROR: health neither GOOD, WEAK nor BAD\";       puts res.body.encode(\"utf-8\", \"binary\", :invalid =\u003e :replace, :undef =\u003e :replace, :replace =\u003e \"\").delete( 134.chr+142.chr+143.chr+145.chr+146.chr);       exit 1;     end;     puts \"ERROR: health not specified in JSON ouput\";     puts res.body.encode(\"utf-8\", \"binary\", :invalid =\u003e :replace, :undef =\u003e :replace, :replace =\u003e \"\").delete( 134.chr+142.chr+143.chr+145.chr+146.chr);     exit 1;   end;   exit 1; rescue StandardError =\u003e e;   puts e.message;   exit 1;  end; '","duration":0.603,"executed":1.4653072e+09,"finn_app":"scamcontrolwebapp","finn_env":"ci","handlers":["default"],"interval":60,"issued":1.4653072e+09,"name":"SCAMCONTROL_HEALTH_CHECK","occurrences":"7","output":"HTTP status: 200 OK\nGOOD\n","standalone":true,"status":0,"tags":["ci","json_check"],"teams":["Forbrukertrygghet"],"timeout":1},"last_status":0},{"acknowledged":false,"check":"order-payment-backoffice_iad_check","client":"ci-tjenesteweb2.finntech.no","dc":"sensu","history":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],"last_execution":1.465306957e+09,"last_result":{"command":"bash -c 'unset RUBYOPT; ruby /iad/local/bin/sensu_iad_check order-payment-backoffice'","duration":0.437,"executed":1.465306957e+09,"finn_app":"order-payment-backoffice","finn_env":"ci","handlers":["iad_check"],"interval":1200,"issued":1.465306957e+09,"name":"order-payment-backoffice_iad_check","output":"{\n  \"name\": \"order-payment-backoffice\",\n  \"status\": {\n    \"status\": \"running\",\n    \"licensee_name\": \"finn\",\n    \"licensee_level\": \"order-payment-backoffice\",\n    \"msg\": \"Tomcat is running with pid=15584, AJP-port=8993.\",\n    \"locked\": false,\n    \"return_cod","standalone":true,"status":0,"tags":[],"teams":[],"type":"metric"},"last_status":0},{"acknowledged":false,"check":"feedback-collector-server_iad_check","client":"ci-tjenesteweb2.finntech.no","dc":"sensu","history":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],"last_execution":1.465306975e+09,"last_result":{"command":"bash -c 'unset RUBYOPT; ruby /iad/local/bin/sensu_iad_check feedback-collector-server'","duration":0.45,"executed":1.465306975e+09,"finn_app":"feedback-collector-server","finn_env":"ci","handlers":["iad_check"],"interval":1200,"issued":1.465306975e+09,"name":"feedback-collector-server_iad_check","output":"{\n  \"name\": \"feedback-collector-server\",\n  \"status\": {\n    \"status\": \"running\",\n    \"licensee_name\": \"finn\",\n    \"licensee_level\": \"feedback-collector-server\",\n    \"msg\": \"Tomcat is running with pid=19624, AJP-port=8180.\",\n    \"locked\": false,\n    \"return_c","standalone":true,"status":0,"tags":[],"teams":[],"type":"metric"},"last_status":0},{"acknowledged":false,"check":"oppdrag_iad_check","client":"ci-tjenesteweb2.finntech.no","dc":"sensu","history":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],"last_execution":1.465306977e+09,"last_result":{"command":"bash -c 'unset RUBYOPT; ruby /iad/local/bin/sensu_iad_check oppdrag'","duration":0.554,"executed":1.465306977e+09,"finn_app":"oppdrag","finn_env":"ci","handlers":["iad_check"],"interval":1200,"issued":1.465306977e+09,"name":"oppdrag_iad_check","output":"{\n  \"name\": \"oppdrag\",\n  \"status\": {\n    \"status\": \"running\",\n    \"licensee_name\": \"finn\",\n    \"licensee_level\": \"oppdrag\",\n    \"msg\": \"Tomcat is running with pid=14916, AJP-port=8019.\",\n    \"locked\": false,\n    \"return_code\": 0\n  },\n  \"artifact\": \"/iad/fin","standalone":true,"status":0,"tags":[],"teams":[],"type":"metric"},"last_status":0},{"acknowledged":false,"check":"hjerterom-web_iad_check","client":"ci-tjenesteweb2.finntech.no","dc":"sensu","history":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],"last_execution":1.463747826e+09,"last_result":{"command":"bash -c 'unset RUBYOPT; ruby /iad/local/bin/sensu_iad_check hjerterom-web'","duration":0.329,"executed":1.463747826e+09,"finn_app":"hjerterom-web","finn_env":"ci","handlers":["iad_check"],"interval":1200,"issued":1.463747826e+09,"name":"hjerterom-web_iad_check","output":"{\n  \"name\": \"hjerterom-web\",\n  \"status\": {\n    \"status\": \"unavailable\",\n    \"licensee_name\": \"finn\",\n    \"licensee_level\": \"hjerterom-web\",\n    \"msg\": \" /iad/finn/hjerterom-web does not exist!\",\n    \"locked\": false,\n    \"return_code\": 1\n  },\n  \"artifact\": \"","standalone":true,"status":0,"tags":[],"teams":[],"type":"metric"},"last_status":0},{"acknowledged":false,"check":"partner-web_iad_check","client":"ci-tjenesteweb2.finntech.no","dc":"sensu","history":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],"last_execution":1.465306974e+09,"last_result":{"command":"bash -c 'unset RUBYOPT; ruby /iad/local/bin/sensu_iad_check partner-web'","duration":0.704,"executed":1.465306974e+09,"finn_app":"partner-web","finn_env":"ci","handlers":["iad_check"],"interval":1200,"issued":1.465306974e+09,"name":"partner-web_iad_check","output":"{\n  \"name\": \"partner-web\",\n  \"status\": \"Missing node version in finnbuild.json, falling back to hieradata (not good)\\n{\\n  \\\"status\\\": \\\"running\\\",\\n  \\\"licensee_name\\\": \\\"finn\\\",\\n  \\\"licensee_level\\\": \\\"partner-web\\\",\\n  \\\"msg\\\": \\\"Module running with pid","standalone":true,"status":0,"tags":[],"teams":[],"type":"metric"},"last_status":0},{"acknowledged":false,"check":"rr_iad_check","client":"ci-tjenesteweb2.finntech.no","dc":"sensu","history":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],"last_execution":1.465306983e+09,"last_result":{"command":"bash -c 'unset RUBYOPT; ruby /iad/local/bin/sensu_iad_check rr'","duration":0.406,"executed":1.465306983e+09,"finn_app":"rr","finn_env":"ci","handlers":["iad_check"],"interval":1200,"issued":1.465306983e+09,"name":"rr_iad_check","output":"{\n  \"name\": \"rr\",\n  \"status\": {\n    \"status\": \"running\",\n    \"licensee_name\": \"finn\",\n    \"licensee_level\": \"rr\",\n    \"msg\": \"Tomcat is running with pid=17017, AJP-port=9068.\",\n    \"locked\": false,\n    \"return_code\": 0\n  },\n  \"artifact\": \"/iad/finn/rr/wars/","standalone":true,"status":0,"tags":[],"teams":[],"type":"metric"},"last_status":0},{"acknowledged":false,"check":"extended-profile-web_iad_check","client":"ci-tjenesteweb2.finntech.no","dc":"sensu","history":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],"last_execution":1.463747822e+09,"last_result":{"command":"bash -c 'unset RUBYOPT; ruby /iad/local/bin/sensu_iad_check extended-profile-web'","duration":0.693,"executed":1.463747822e+09,"finn_app":"extended-profile-web","finn_env":"ci","handlers":["iad_check"],"interval":1200,"issued":1.463747822e+09,"name":"extended-profile-web_iad_check","output":"{\n  \"name\": \"extended-profile-web\",\n  \"status\": {\n    \"status\": \"stopped\",\n    \"licensee_name\": \"finn\",\n    \"licensee_level\": \"extended-profile-web\",\n    \"msg\": \"Tomcat not running.\",\n    \"locked\": false,\n    \"return_code\": 1\n  },\n  \"artifact\": \"/iad/finn/e","standalone":true,"status":0,"tags":[],"teams":[],"type":"metric"},"last_status":0},{"acknowledged":false,"check":"FINN_TALENT_WEB_CHECK_WEAK","client":"ci-tjenesteweb2.finntech.no","dc":"sensu","history":[0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,0],"last_execution":1.464267107e+09,"last_result":{"command":"ruby -e 'require \"net/http\"; require \"json\"; proxy_host = \"localhost\"; proxy_port = 8733; use_lb_status = false; url = \"http://ci.finn.no/talent/health/services\"; begin;   if use_lb_status and !File.exist?( \"/iad/finn/finn-talent-web/htdocs/lb.html\" ) then;    puts \"OK: not in load balancer\";     exit 0;   end;   uri = URI.parse( url );   client = Net::HTTP::Proxy(proxy_host, proxy_port).new( uri.host, uri.port );   client.open_timeout = 5;   client.read_timeout = 5;   req = Net::HTTP::Get.new( uri.request_uri );   res = client.request( req );   puts \"HTTP status: \"+ res.code + \" \" + res.message;   if [ \"200\" ].include? res.code then;     json_ob=JSON.parse(res.body);     if( json_ob.include?( \"health\" )  ) then;       status=json_ob[\"health\"];       puts status;       if \"GOOD\" == status then;         exit 0;       elsif [\"WEAK\", \"BAD\"].include? status then;         puts res.body.encode(\"utf-8\", \"binary\", :invalid =\u003e :replace, :undef =\u003e :replace, :replace =\u003e \"\").delete( 134.chr+142.chr+143.chr+145.chr+146.chr);         exit 1;       end;       puts \"ERROR: health neither GOOD, WEAK nor BAD\";       puts res.body.encode(\"utf-8\", \"binary\", :invalid =\u003e :replace, :undef =\u003e :replace, :replace =\u003e \"\").delete( 134.chr+142.chr+143.chr+145.chr+146.chr);       exit 1;     end;     puts \"ERROR: health not specified in JSON ouput\";     puts res.body.encode(\"utf-8\", \"binary\", :invalid =\u003e :replace, :undef =\u003e :replace, :replace =\u003e \"\").delete( 134.chr+142.chr+143.chr+145.chr+146.chr);     exit 1;   end;   exit 1; rescue StandardError =\u003e e;   puts e.message;   exit 1;  end; '","duration":1.029,"executed":1.464267107e+09,"finn_app":"finn-talent-web","finn_env":"ci","force_resolve":true,"handlers":["default"],"interval":60,"issued":1.464267107e+09,"name":"FINN_TALENT_WEB_CHECK_WEAK","occurrences":"3","output":"Resolving on request of the API","standalone":true,"status":0,"tags":["ci","weak_json_check"],"teams":["Rekruttering"],"timeout":5,"total_state_change":5},"last_status":0},{"acknowledged":false,"check":"scamcontrolwebapp_iad_check","client":"ci-tjenesteweb2.finntech.no","dc":"sensu","history":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],"last_execution":1.465306969e+09,"last_result":{"command":"bash -c 'unset RUBYOPT; ruby /iad/local/bin/sensu_iad_check scamcontrolwebapp'","duration":0.502,"executed":1.465306969e+09,"finn_app":"scamcontrolwebapp","finn_env":"ci","handlers":["iad_check"],"interval":1200,"issued":1.465306969e+09,"name":"scamcontrolwebapp_iad_check","output":"{\n  \"name\": \"scamcontrolwebapp\",\n  \"status\": {\n    \"status\": \"running\",\n    \"licensee_name\": \"finn\",\n    \"licensee_level\": \"scamcontrolwebapp\",\n    \"msg\": \"Tomcat is running with pid=16572, AJP-port=8030.\",\n    \"locked\": false,\n    \"return_code\": 0\n  },\n  \"","standalone":true,"status":0,"tags":[],"teams":[],"type":"metric"},"last_status":0},{"acknowledged":false,"check":"finn-penger-tunnel_iad_check","client":"ci-tjenesteweb2.finntech.no","dc":"sensu","history":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],"last_execution":1.460964632e+09,"last_result":{"command":"bash -c 'unset RUBYOPT; ruby /iad/local/bin/sensu_iad_check finn-penger-tunnel'","duration":0.842,"executed":1.460964632e+09,"finn_app":"finn-penger-tunnel","finn_env":"ci","handlers":["iad_check"],"interval":1200,"issued":1.460964632e+09,"name":"finn-penger-tunnel_iad_check","output":"{\n  \"name\": \"finn-penger-tunnel\",\n  \"status\": {\n    \"status\": \"running\",\n    \"licensee_name\": \"finn\",\n    \"licensee_level\": \"finn-penger-tunnel\",\n    \"msg\": \"Tomcat is running with pid=32658, AJP-port=8127.\",\n    \"locked\": false,\n    \"return_code\": 0\n  },\n ","standalone":true,"status":0,"tags":[],"teams":[],"type":"metric"},"last_status":0},{"acknowledged":false,"check":"organisation-management-web_iad_check","client":"ci-tjenesteweb2.finntech.no","dc":"sensu","history":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],"last_execution":1.465306957e+09,"last_result":{"command":"bash -c 'unset RUBYOPT; ruby /iad/local/bin/sensu_iad_check organisation-management-web'","duration":0.404,"executed":1.465306957e+09,"finn_app":"organisation-management-web","finn_env":"ci","handlers":["iad_check"],"interval":1200,"issued":1.465306957e+09,"name":"organisation-management-web_iad_check","output":"{\n  \"name\": \"organisation-management-web\",\n  \"status\": {\n    \"status\": \"running\",\n    \"licensee_name\": \"finn\",\n    \"licensee_level\": \"organisation-management-web\",\n    \"msg\": \"Tomcat is running with pid=15479, AJP-port=8251.\",\n    \"locked\": false,\n    \"retu","standalone":true,"status":0,"tags":[],"teams":[],"type":"metric"},"last_status":0},{"acknowledged":false,"check":"search-front_iad_check","client":"ci-tjenesteweb2.finntech.no","dc":"sensu","history":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],"last_execution":1.465306975e+09,"last_result":{"command":"bash -c 'unset RUBYOPT; ruby /iad/local/bin/sensu_iad_check search-front'","duration":0.844,"executed":1.465306975e+09,"finn_app":"search-front","finn_env":"ci","handlers":["iad_check"],"interval":1200,"issued":1.465306975e+09,"name":"search-front_iad_check","output":"{\n  \"name\": \"search-front\",\n  \"status\": {\n    \"status\": \"running\",\n    \"licensee_name\": \"finn\",\n    \"licensee_level\": \"search-front\",\n    \"msg\": \"Tomcat is running with pid=18465, AJP-port=8104.\",\n    \"locked\": false,\n    \"return_code\": 0\n  },\n  \"artifact\":","standalone":true,"status":0,"tags":[],"teams":[],"type":"metric"},"last_status":0},{"acknowledged":false,"check":"api-spid-user_iad_check","client":"ci-tjenesteweb2.finntech.no","dc":"sensu","history":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],"last_execution":1.465306979e+09,"last_result":{"command":"bash -c 'unset RUBYOPT; ruby /iad/local/bin/sensu_iad_check api-spid-user'","duration":0.383,"executed":1.465306979e+09,"finn_app":"api-spid-user","finn_env":"ci","handlers":["iad_check"],"interval":1200,"issued":1.465306979e+09,"name":"api-spid-user_iad_check","output":"{\n  \"name\": \"api-spid-user\",\n  \"status\": {\n    \"status\": \"running\",\n    \"licensee_name\": \"finn\",\n    \"licensee_level\": \"api-spid-user\",\n    \"msg\": \"Tomcat is running with pid=15776, AJP-port=8490.\",\n    \"locked\": false,\n    \"return_code\": 0\n  },\n  \"artifact","standalone":true,"status":0,"tags":[],"teams":[],"type":"metric"},"last_status":0},{"acknowledged":false,"check":"OPPDRAG_HEALTH","client":"ci-tjenesteweb2.finntech.no","dc":"sensu","history":[1,1,1,1,1,1,2,2,2,2,2,1,1,1,1,1,1,1,1,1,1],"last_execution":1.465307202e+09,"last_result":{"action":"create","command":"ruby -e 'require \"net/http\"; require \"json\"; proxy_host = \"localhost\"; proxy_port = 8091; use_lb_status = false; url = \"http://ci.finn.no/oppdrag/health/services\"; begin;   if use_lb_status and !File.exist?( \"/iad/finn/oppdrag/htdocs/lb.html\" ) then;    puts \"OK: not in load balancer\";     exit 0;   end;   uri = URI.parse( url );   client = Net::HTTP::Proxy(proxy_host, proxy_port).new( uri.host, uri.port );   client.open_timeout = 4;   client.read_timeout = 4;   req = Net::HTTP::Get.new( uri.request_uri );   res = client.request( req );   puts \"HTTP status: \"+ res.code + \" \" + res.message;   if [ \"200\" ].include? res.code then;     json_ob=JSON.parse(res.body);     if( json_ob.include?( \"health\" )  ) then;       status=json_ob[\"health\"];       puts status;       if \"GOOD\" == status then;         exit 0;       elsif [\"WEAK\", \"BAD\"].include? status then;         puts res.body.encode(\"utf-8\", \"binary\", :invalid =\u003e :replace, :undef =\u003e :replace, :replace =\u003e \"\").delete( 134.chr+142.chr+143.chr+145.chr+146.chr);         exit 0;       end;       puts \"ERROR: health neither GOOD, WEAK nor BAD\";       puts res.body.encode(\"utf-8\", \"binary\", :invalid =\u003e :replace, :undef =\u003e :replace, :replace =\u003e \"\").delete( 134.chr+142.chr+143.chr+145.chr+146.chr);       exit 1;     end;     puts \"ERROR: health not specified in JSON ouput\";     puts res.body.encode(\"utf-8\", \"binary\", :invalid =\u003e :replace, :undef =\u003e :replace, :replace =\u003e \"\").delete( 134.chr+142.chr+143.chr+145.chr+146.chr);     exit 1;   end;   exit 1; rescue StandardError =\u003e e;   puts e.message;   exit 1;  end; '","duration":0.402,"executed":1.465307202e+09,"finn_app":"oppdrag","finn_env":"ci","handlers":["default"],"history":["1","1","1","1","1","1","2","2","2","2","2","1","1","1","1","1","1","1","1","1","1"],"interval":60,"issued":1.465307202e+09,"name":"OPPDRAG_HEALTH","occurrences":10,"output":"HTTP status: 500 Internal Server Error\n","standalone":true,"status":1,"tags":["ci","json_check"],"teams":["Oppdrag"],"timeout":4,"total_state_change":9},"last_status":1},{"acknowledged":false,"check":"SCAMCONTROL_HEALTH_CHECK_WEAK","client":"ci-tjenesteweb2.finntech.no","dc":"sensu","history":[0,0,0,0,0,0,2,2,2,2,0,0,0,0,0,0,0,0,0,0,0],"last_execution":1.465307206e+09,"last_result":{"command":"ruby -e 'require \"net/http\"; require \"json\"; proxy_host = \"localhost\"; proxy_port = 8031; use_lb_status = false; url = \"http://ci.scamcontrol.finn.no/health/services\"; begin;   if use_lb_status and !File.exist?( \"/iad/finn/scamcontrolwebapp/htdocs/lb.html\" ) then;    puts \"OK: not in load balancer\";     exit 0;   end;   uri = URI.parse( url );   client = Net::HTTP::Proxy(proxy_host, proxy_port).new( uri.host, uri.port );   client.open_timeout = 1;   client.read_timeout = 1;   req = Net::HTTP::Get.new( uri.request_uri );   res = client.request( req );   puts \"HTTP status: \"+ res.code + \" \" + res.message;   if [ \"200\" ].include? res.code then;     json_ob=JSON.parse(res.body);     if( json_ob.include?( \"health\" )  ) then;       status=json_ob[\"health\"];       puts status;       if \"GOOD\" == status then;         exit 0;       elsif [\"WEAK\", \"BAD\"].include? status then;         puts res.body.encode(\"utf-8\", \"binary\", :invalid =\u003e :replace, :undef =\u003e :replace, :replace =\u003e \"\").delete( 134.chr+142.chr+143.chr+145.chr+146.chr);         exit 1;       end;       puts \"ERROR: health neither GOOD, WEAK nor BAD\";       puts res.body.encode(\"utf-8\", \"binary\", :invalid =\u003e :replace, :undef =\u003e :replace, :replace =\u003e \"\").delete( 134.chr+142.chr+143.chr+145.chr+146.chr);       exit 1;     end;     puts \"ERROR: health not specified in JSON ouput\";     puts res.body.encode(\"utf-8\", \"binary\", :invalid =\u003e :replace, :undef =\u003e :replace, :replace =\u003e \"\").delete( 134.chr+142.chr+143.chr+145.chr+146.chr);     exit 1;   end;   exit 1; rescue StandardError =\u003e e;   puts e.message;   exit 1;  end; '","duration":0.603,"executed":1.465307206e+09,"finn_app":"scamcontrolwebapp","finn_env":"ci","handlers":["default"],"interval":60,"issued":1.465307206e+09,"name":"SCAMCONTROL_HEALTH_CHECK_WEAK","occurrences":"7","output":"HTTP status: 200 OK\nGOOD\n","standalone":true,"status":0,"tags":["ci","weak_json_check"],"teams":["Forbrukertrygghet"],"timeout":1},"last_status":0},{"acknowledged":false,"check":"keepalive","client":"ci-tjenesteweb2.finntech.no","dc":"sensu","history":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],"last_execution":1.465307197e+09,"last_result":{"executed":1.465307197e+09,"issued":1.465307197e+09,"name":"keepalive","output":"Keepalive sent from client 17 seconds ago","status":0,"thresholds":{"critical":180,"warning":120}},"last_status":0},{"acknowledged":false,"check":"OPPDRAG_HEALTH_WEAK","client":"ci-tjenesteweb2.finntech.no","dc":"sensu","history":[1,1,1,1,1,1,1,2,2,2,2,1,1,1,1,1,1,1,1,1,1],"last_execution":1.465307177e+09,"last_result":{"action":"create","command":"ruby -e 'require \"net/http\"; require \"json\"; proxy_host = \"localhost\"; proxy_port = 8091; use_lb_status = false; url = \"http://ci.finn.no/oppdrag/health/services\"; begin;   if use_lb_status and !File.exist?( \"/iad/finn/oppdrag/htdocs/lb.html\" ) then;    puts \"OK: not in load balancer\";     exit 0;   end;   uri = URI.parse( url );   client = Net::HTTP::Proxy(proxy_host, proxy_port).new( uri.host, uri.port );   client.open_timeout = 4;   client.read_timeout = 4;   req = Net::HTTP::Get.new( uri.request_uri );   res = client.request( req );   puts \"HTTP status: \"+ res.code + \" \" + res.message;   if [ \"200\" ].include? res.code then;     json_ob=JSON.parse(res.body);     if( json_ob.include?( \"health\" )  ) then;       status=json_ob[\"health\"];       puts status;       if \"GOOD\" == status then;         exit 0;       elsif [\"WEAK\", \"BAD\"].include? status then;         puts res.body.encode(\"utf-8\", \"binary\", :invalid =\u003e :replace, :undef =\u003e :replace, :replace =\u003e \"\").delete( 134.chr+142.chr+143.chr+145.chr+146.chr);         exit 1;       end;       puts \"ERROR: health neither GOOD, WEAK nor BAD\";       puts res.body.encode(\"utf-8\", \"binary\", :invalid =\u003e :replace, :undef =\u003e :replace, :replace =\u003e \"\").delete( 134.chr+142.chr+143.chr+145.chr+146.chr);       exit 1;     end;     puts \"ERROR: health not specified in JSON ouput\";     puts res.body.encode(\"utf-8\", \"binary\", :invalid =\u003e :replace, :undef =\u003e :replace, :replace =\u003e \"\").delete( 134.chr+142.chr+143.chr+145.chr+146.chr);     exit 1;   end;   exit 1; rescue StandardError =\u003e e;   puts e.message;   exit 1;  end; '","duration":0.407,"executed":1.465307177e+09,"finn_app":"oppdrag","finn_env":"ci","handlers":["default"],"history":["1","1","1","1","1","1","1","2","2","2","2","1","1","1","1","1","1","1","1","1","1"],"interval":60,"issued":1.465307177e+09,"name":"OPPDRAG_HEALTH_WEAK","occurrences":10,"output":"HTTP status: 500 Internal Server Error\n","standalone":true,"status":1,"tags":["ci","weak_json_check"],"teams":["Oppdrag"],"timeout":4,"total_state_change":9},"last_status":1},{"acknowledged":false,"check":"PULSE_WEB_CHECK","client":"ci-tjenesteweb2.finntech.no","dc":"sensu","history":[0,0,2,1,1,1,1,1,1,1,1,1,1,2,1,1,1,1,1,1,0],"last_execution":1.464267107e+09,"last_result":{"command":"ruby -e 'require \"net/http\"; require \"json\"; proxy_host = \"localhost\"; proxy_port = 8607; use_lb_status = false; url = \"http://ci.finn.no/pulse/health\"; begin;   if use_lb_status and !File.exist?( \"/iad/finn/pulse-web/htdocs/lb.html\" ) then;    puts \"OK: not in load balancer\";     exit 0;   end;   uri = URI.parse( url );   client = Net::HTTP::Proxy(proxy_host, proxy_port).new( uri.host, uri.port );   client.open_timeout = 1;   client.read_timeout = 1;   req = Net::HTTP::Get.new( uri.request_uri );   res = client.request( req );   puts res.code + \" \" + res.message;   puts res.body.encode(\"utf-8\", \"binary\", :invalid =\u003e :replace, :undef =\u003e :replace, :replace =\u003e \"\").delete( 134.chr+142.chr+143.chr+145.chr+146.chr);   if res.code == \"200\" then;     exit 0;   elsif res.code == \"210\" then;     exit 1;   end;   exit 1; rescue StandardError =\u003e e;   puts e.message;   exit 1;  end; '","duration":0.82,"executed":1.464267107e+09,"finn_app":"pulse-web","finn_env":"ci","force_resolve":true,"handlers":["default"],"interval":60,"issued":1.464267107e+09,"name":"PULSE_WEB_CHECK","occurrences":"2","output":"Resolving on request of the API","standalone":true,"status":0,"tags":["ci","url_check"],"teams":["adview"],"timeout":1,"total_state_change":19},"last_status":0},{"acknowledged":false,"check":"smajobber_iad_check","client":"ci-tjenesteweb2.finntech.no","dc":"sensu","history":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],"last_execution":1.465306974e+09,"last_result":{"command":"bash -c 'unset RUBYOPT; ruby /iad/local/bin/sensu_iad_check smajobber'","duration":0.569,"executed":1.465306974e+09,"finn_app":"smajobber","finn_env":"ci","handlers":["iad_check"],"interval":1200,"issued":1.465306974e+09,"name":"smajobber_iad_check","output":"{\n  \"name\": \"smajobber\",\n  \"status\": {\n    \"status\": \"running\",\n    \"licensee_name\": \"finn\",\n    \"licensee_level\": \"smajobber\",\n    \"msg\": \"Tomcat is running with pid=20316, AJP-port=8114.\",\n    \"locked\": false,\n    \"return_code\": 0\n  },\n  \"artifact\": \"/iad","standalone":true,"status":0,"tags":[],"teams":[],"type":"metric"},"last_status":0},{"acknowledged":false,"check":"login-webapp_iad_check","client":"ci-tjenesteweb2.finntech.no","dc":"sensu","history":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],"last_execution":1.465306965e+09,"last_result":{"command":"bash -c 'unset RUBYOPT; ruby /iad/local/bin/sensu_iad_check login-webapp'","duration":0.416,"executed":1.465306965e+09,"finn_app":"login-webapp","finn_env":"ci","handlers":["iad_check"],"interval":1200,"issued":1.465306965e+09,"name":"login-webapp_iad_check","output":"{\n  \"name\": \"login-webapp\",\n  \"status\": {\n    \"status\": \"running\",\n    \"licensee_name\": \"finn\",\n    \"licensee_level\": \"login-webapp\",\n    \"msg\": \"Tomcat is running with pid=14519, AJP-port=8087.\",\n    \"locked\": false,\n    \"return_code\": 0\n  },\n  \"artifact\":","standalone":true,"status":0,"tags":[],"teams":[],"type":"metric"},"last_status":0},{"acknowledged":false,"check":"recruitment_iad_check","client":"ci-tjenesteweb2.finntech.no","dc":"sensu","history":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],"last_execution":1.465306963e+09,"last_result":{"command":"bash -c 'unset RUBYOPT; ruby /iad/local/bin/sensu_iad_check recruitment'","duration":0.509,"executed":1.465306963e+09,"finn_app":"recruitment","finn_env":"ci","handlers":["iad_check"],"interval":1200,"issued":1.465306963e+09,"name":"recruitment_iad_check","output":"{\n  \"name\": \"recruitment\",\n  \"status\": {\n    \"status\": \"running\",\n    \"licensee_name\": \"finn\",\n    \"licensee_level\": \"recruitment\",\n    \"msg\": \"Tomcat is running with pid=6694, AJP-port=8193.\",\n    \"locked\": true,\n    \"return_code\": 0\n  },\n  \"artifact\": \"/i","standalone":true,"status":0,"tags":[],"teams":[],"type":"metric"},"last_status":0},{"acknowledged":false,"check":"pulse-web_iad_check","client":"ci-tjenesteweb2.finntech.no","dc":"sensu","history":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],"last_execution":1.463747828e+09,"last_result":{"command":"bash -c 'unset RUBYOPT; ruby /iad/local/bin/sensu_iad_check pulse-web'","duration":0.522,"executed":1.463747828e+09,"finn_app":"pulse-web","finn_env":"ci","handlers":["iad_check"],"interval":1200,"issued":1.463747828e+09,"name":"pulse-web_iad_check","output":"{\n  \"name\": \"pulse-web\",\n  \"status\": \"Missing node version in finnbuild.json, falling back to hieradata (not good)\\n{\\n  \\\"status\\\": \\\"stopped\\\",\\n  \\\"licensee_name\\\": \\\"finn\\\",\\n  \\\"licensee_level\\\": \\\"pulse-web\\\",\\n  \\\"msg\\\": \\\"Module is NOT running.\\\",\\n","standalone":true,"status":0,"tags":[],"teams":[],"type":"metric"},"last_status":0},{"acknowledged":false,"check":"FINNBOX_HEALTH_CHECK","client":"ci-tjenesteweb2.finntech.no","dc":"sensu","history":[0,0,0,0,0,0,1,2,2,2,0,0,0,0,0,0,0,0,0,0,0],"last_execution":1.465307177e+09,"last_result":{"command":"ruby -e 'require \"net/http\"; require \"json\"; proxy_host = \"localhost\"; proxy_port = 9056; use_lb_status = false; url = \"http://ci.finn.no/finnboks/health\"; begin;   if use_lb_status and !File.exist?( \"/iad/finn/finnbox-web/htdocs/lb.html\" ) then;    puts \"OK: not in load balancer\";     exit 0;   end;   uri = URI.parse( url );   client = Net::HTTP::Proxy(proxy_host, proxy_port).new( uri.host, uri.port );   client.open_timeout = 5;   client.read_timeout = 5;   req = Net::HTTP::Get.new( uri.request_uri );   res = client.request( req );   puts res.code + \" \" + res.message;   puts res.body.encode(\"utf-8\", \"binary\", :invalid =\u003e :replace, :undef =\u003e :replace, :replace =\u003e \"\").delete( 134.chr+142.chr+143.chr+145.chr+146.chr);   if res.code == \"200\" then;     exit 0;   elsif res.code == \"210\" then;     exit 1;   end;   exit 1; rescue StandardError =\u003e e;   puts e.message;   exit 1;  end; '","duration":0.214,"executed":1.465307177e+09,"finn_app":"finnbox-web","finn_env":"ci","handlers":["default"],"interval":60,"issued":1.465307177e+09,"name":"FINNBOX_HEALTH_CHECK","occurrences":3,"output":"200 OK\n[{\"rel\":\"build\",\"href\":\"/finnboks/health/build\",\"type\":\"application/json\"},{\"rel\":\"services\",\"href\":\"/finnboks/health/services\",\"type\":\"application/json\"},{\"rel\":\"documentation\",\"href\":\"/finnboks/health/documentation\",\"type\":\"application/json\"}]\n","standalone":true,"status":0,"tags":["ci","url_check"],"teams":["Kommunikasjon_og_Deling"],"timeout":5},"last_status":0},{"acknowledged":false,"check":"oppdrag-front_iad_check","client":"ci-tjenesteweb2.finntech.no","dc":"sensu","history":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],"last_execution":1.465306955e+09,"last_result":{"command":"bash -c 'unset RUBYOPT; ruby /iad/local/bin/sensu_iad_check oppdrag-front'","duration":0.3,"executed":1.465306955e+09,"finn_app":"oppdrag-front","finn_env":"ci","handlers":["iad_check"],"interval":1200,"issued":1.465306955e+09,"name":"oppdrag-front_iad_check","output":"{\n  \"name\": \"oppdrag-front\",\n  \"status\": {\n    \"status\": \"stopped\",\n    \"licensee_name\": \"finn\",\n    \"licensee_level\": \"oppdrag-front\",\n    \"msg\": \"Module is NOT running.\",\n    \"locked\": false,\n    \"return_code\": 1\n  },\n  \"artifact\": \"/iad/finn/oppdrag-fron","standalone":true,"status":0,"tags":[],"teams":[],"type":"metric"},"last_status":0},{"acknowledged":false,"check":"SMAJOBBER_ERRORS","client":"ci-tjenesteweb2.finntech.no","dc":"sensu","history":[0,0,0,0,0,0,2,2,0,0,0,0,0,0,0,0,0,0,2,2,0],"last_execution":1.464267107e+09,"last_result":{"command":"ruby -e 'require \"net/http\"; require \"json\"; proxy_host = \"localhost\"; proxy_port = 8115; use_lb_status = false; url = \"http://ci.finn.no/smajobber/internal-backstage/errors.json\"; begin;   if use_lb_status and !File.exist?( \"/iad/finn/smajobber/htdocs/lb.html\" ) then;    puts \"OK: not in load balancer\";     exit 0;   end;   uri = URI.parse( url );   client = Net::HTTP::Proxy(proxy_host, proxy_port).new( uri.host, uri.port );   client.open_timeout = 4;   client.read_timeout = 4;   req = Net::HTTP::Get.new( uri.request_uri );   res = client.request( req );   puts res.code + \" \" + res.message;   puts res.body.encode(\"utf-8\", \"binary\", :invalid =\u003e :replace, :undef =\u003e :replace, :replace =\u003e \"\").delete( 134.chr+142.chr+143.chr+145.chr+146.chr);   if res.code == \"200\" then;     exit 0;   elsif res.code == \"210\" then;     exit 1;   end;   exit 1; rescue StandardError =\u003e e;   puts e.message;   exit 1;  end; '","duration":4.109,"executed":1.464267107e+09,"finn_app":"smajobber","finn_env":"ci","force_resolve":true,"handlers":["default"],"interval":300,"issued":1.464267107e+09,"name":"SMAJOBBER_ERRORS","occurrences":2,"output":"Resolving on request of the API","standalone":true,"status":0,"tags":["ci","url_check"],"teams":["Smaajobber"],"timeout":4,"total_state_change":15},"last_status":0},{"acknowledged":false,"check":"VETTING_HEALTH_CHECK","client":"ci-tjenesteweb2.finntech.no","dc":"sensu","history":[1,1,1,1,1,1,2,2,2,2,1,1,1,1,1,1,1,1,1,1,1],"last_execution":1.465307204e+09,"last_result":{"action":"create","command":"ruby -e 'require \"net/http\"; require \"json\"; proxy_host = \"localhost\"; proxy_port = 8991; use_lb_status = false; url = \"http://ci.annonsekontroll.finn.no/health/services\"; begin;   if use_lb_status and !File.exist?( \"/iad/finn/vettingwebapp/htdocs/lb.html\" ) then;    puts \"OK: not in load balancer\";     exit 0;   end;   uri = URI.parse( url );   client = Net::HTTP::Proxy(proxy_host, proxy_port).new( uri.host, uri.port );   client.open_timeout = 1;   client.read_timeout = 1;   req = Net::HTTP::Get.new( uri.request_uri );   res = client.request( req );   puts \"HTTP status: \"+ res.code + \" \" + res.message;   if [ \"200\" ].include? res.code then;     json_ob=JSON.parse(res.body);     if( json_ob.include?( \"health\" )  ) then;       status=json_ob[\"health\"];       puts status;       if \"GOOD\" == status then;         exit 0;       elsif [\"WEAK\", \"BAD\"].include? status then;         puts res.body.encode(\"utf-8\", \"binary\", :invalid =\u003e :replace, :undef =\u003e :replace, :replace =\u003e \"\").delete( 134.chr+142.chr+143.chr+145.chr+146.chr);         exit 0;       end;       puts \"ERROR: health neither GOOD, WEAK nor BAD\";       puts res.body.encode(\"utf-8\", \"binary\", :invalid =\u003e :replace, :undef =\u003e :replace, :replace =\u003e \"\").delete( 134.chr+142.chr+143.chr+145.chr+146.chr);       exit 1;     end;     puts \"ERROR: health not specified in JSON ouput\";     puts res.body.encode(\"utf-8\", \"binary\", :invalid =\u003e :replace, :undef =\u003e :replace, :replace =\u003e \"\").delete( 134.chr+142.chr+143.chr+145.chr+146.chr);     exit 1;   end;   exit 1; rescue StandardError =\u003e e;   puts e.message;   exit 1;  end; '","duration":0.402,"executed":1.465307204e+09,"finn_app":"vettingwebapp","finn_env":"ci","handlers":["default"],"history":["1","1","1","1","1","1","2","2","2","2","1","1","1","1","1","1","1","1","1","1","1"],"interval":60,"issued":1.465307204e+09,"name":"VETTING_HEALTH_CHECK","occurrences":11,"output":"HTTP status: 500 Internal Server Error\n","standalone":true,"status":1,"tags":["ci","json_check"],"teams":["Forbrukertrygghet"],"timeout":1,"total_state_change":9},"last_status":1},{"acknowledged":false,"check":"morse_iad_check","client":"ci-tjenesteweb2.finntech.no","dc":"sensu","history":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],"last_execution":1.465306979e+09,"last_result":{"command":"bash -c 'unset RUBYOPT; ruby /iad/local/bin/sensu_iad_check morse'","duration":0.537,"executed":1.465306979e+09,"finn_app":"morse","finn_env":"ci","handlers":["iad_check"],"interval":1200,"issued":1.465306979e+09,"name":"morse_iad_check","output":"{\n  \"name\": \"morse\",\n  \"status\": {\n    \"status\": \"running\",\n    \"licensee_name\": \"finn\",\n    \"licensee_level\": \"morse\",\n    \"msg\": \"Tomcat is running with pid=16296, AJP-port=8021.\",\n    \"locked\": false,\n    \"return_code\": 0\n  },\n  \"artifact\": \"/iad/finn/mo","standalone":true,"status":0,"tags":[],"teams":[],"type":"metric"},"last_status":0},{"acknowledged":false,"check":"VETTING_HEALTH_CHECK_WEAK","client":"ci-tjenesteweb2.finntech.no","dc":"sensu","history":[1,1,1,1,1,1,2,2,2,2,2,1,1,1,1,1,1,1,1,1,1],"last_execution":1.4653072e+09,"last_result":{"action":"create","command":"ruby -e 'require \"net/http\"; require \"json\"; proxy_host = \"localhost\"; proxy_port = 8991; use_lb_status = false; url = \"http://ci.annonsekontroll.finn.no/health/services\"; begin;   if use_lb_status and !File.exist?( \"/iad/finn/vettingwebapp/htdocs/lb.html\" ) then;    puts \"OK: not in load balancer\";     exit 0;   end;   uri = URI.parse( url );   client = Net::HTTP::Proxy(proxy_host, proxy_port).new( uri.host, uri.port );   client.open_timeout = 1;   client.read_timeout = 1;   req = Net::HTTP::Get.new( uri.request_uri );   res = client.request( req );   puts \"HTTP status: \"+ res.code + \" \" + res.message;   if [ \"200\" ].include? res.code then;     json_ob=JSON.parse(res.body);     if( json_ob.include?( \"health\" )  ) then;       status=json_ob[\"health\"];       puts status;       if \"GOOD\" == status then;         exit 0;       elsif [\"WEAK\", \"BAD\"].include? status then;         puts res.body.encode(\"utf-8\", \"binary\", :invalid =\u003e :replace, :undef =\u003e :replace, :replace =\u003e \"\").delete( 134.chr+142.chr+143.chr+145.chr+146.chr);         exit 1;       end;       puts \"ERROR: health neither GOOD, WEAK nor BAD\";       puts res.body.encode(\"utf-8\", \"binary\", :invalid =\u003e :replace, :undef =\u003e :replace, :replace =\u003e \"\").delete( 134.chr+142.chr+143.chr+145.chr+146.chr);       exit 1;     end;     puts \"ERROR: health not specified in JSON ouput\";     puts res.body.encode(\"utf-8\", \"binary\", :invalid =\u003e :replace, :undef =\u003e :replace, :replace =\u003e \"\").delete( 134.chr+142.chr+143.chr+145.chr+146.chr);     exit 1;   end;   exit 1; rescue StandardError =\u003e e;   puts e.message;   exit 1;  end; '","duration":0.402,"executed":1.4653072e+09,"finn_app":"vettingwebapp","finn_env":"ci","handlers":["default"],"history":["1","1","1","1","1","1","2","2","2","2","2","1","1","1","1","1","1","1","1","1","1"],"interval":60,"issued":1.4653072e+09,"name":"VETTING_HEALTH_CHECK_WEAK","occurrences":10,"output":"HTTP status: 500 Internal Server Error\n","standalone":true,"status":1,"tags":["ci","weak_json_check"],"teams":["Forbrukertrygghet"],"timeout":1,"total_state_change":9},"last_status":1},{"acknowledged":false,"check":"api-site_iad_check","client":"ci-tjenesteweb2.finntech.no","dc":"sensu","history":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],"last_execution":1.463747844e+09,"last_result":{"command":"bash -c 'unset RUBYOPT; ruby /iad/local/bin/sensu_iad_check api-site'","duration":0.369,"executed":1.463747844e+09,"finn_app":"api-site","finn_env":"ci","handlers":["iad_check"],"interval":1200,"issued":1.463747844e+09,"name":"api-site_iad_check","output":"{\n  \"name\": \"api-site\",\n  \"status\": {\n    \"status\": \"stopped\",\n    \"licensee_name\": \"finn\",\n    \"licensee_level\": \"api-site\",\n    \"msg\": \"Tomcat not running.\",\n    \"locked\": false,\n    \"return_code\": 1\n  },\n  \"artifact\": \"/iad/finn/api-site/wars/api-site_2.","standalone":true,"status":0,"tags":[],"teams":[],"type":"metric"},"last_status":0},{"acknowledged":false,"check":"broadcast_iad_check","client":"ci-tjenesteweb2.finntech.no","dc":"sensu","history":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],"last_execution":1.465306981e+09,"last_result":{"command":"bash -c 'unset RUBYOPT; ruby /iad/local/bin/sensu_iad_check broadcast'","duration":0.402,"executed":1.465306981e+09,"finn_app":"broadcast","finn_env":"ci","handlers":["iad_check"],"interval":1200,"issued":1.465306981e+09,"name":"broadcast_iad_check","output":"{\n  \"name\": \"broadcast\",\n  \"status\": {\n    \"status\": \"running\",\n    \"licensee_name\": \"finn\",\n    \"licensee_level\": \"broadcast\",\n    \"msg\": \"Tomcat is running with pid=15037, AJP-port=9130.\",\n    \"locked\": false,\n    \"return_code\": 0\n  },\n  \"artifact\": \"/iad","standalone":true,"status":0,"tags":[],"teams":[],"type":"metric"},"last_status":0}],"name":"ci-tjenesteweb2.finntech.no","output":"HTTP status: 500 Internal Server Error\n and 3 more...","status":1,"subscriptions":["ALL"],"timestamp":1.4653072e+09,"version":"0.14.0"}
